version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: senicpos-postgres
    environment:
      POSTGRES_DB: SenicPosDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - senicpos-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  senicpos-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: senicpos-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgreSQL=Host=postgres;Port=5432;Database=SenicPosDb;Username=postgres;Password=postgres
      - UsePostgreSQL=true
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - senicpos-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

networks:
  senicpos-network:
    driver: bridge

volumes:
  postgres-data:
